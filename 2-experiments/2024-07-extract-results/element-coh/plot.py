import matplotlib.pyplot as plt
import numpy as np
import json

# Original data
data = {'Ag': {'bcc': -2.7298427224327, 'fcc': -2.7621090285329, 'dc': -1.9755271864829}, 'Al': {'bcc': -3.7117831816127, 'fcc': -3.8021974930057, 'dc': -3.0963059064587}, 'Ar': {'bcc': -0.023012530929918, 'fcc': -0.023982888860019, 'dc': -0.012892821499918}, 'As': {'bcc': -4.300721466606, 'fcc': -4.201996798706, 'dc': -4.4139670811564}, 'Au': {'bcc': -3.353277966633, 'fcc': -3.3748703354331, 'dc': -2.6365838690331}, 'B': {'bcc': -5.0276044585697, 'fcc': -5.3831630888827, 'dc': -5.8214299708817}, 'Ba': {'bcc': -2.067216011017, 'fcc': -2.071252683697, 'dc': -1.0940929244071}, 'Be': {'bcc': -3.660941977001, 'fcc': -3.677421326875, 'dc': -2.157261812258}, 'Bi': {'bcc': -3.9591052688565, 'fcc': -3.9382704649565, 'dc': -3.7906917717564}, 'Br': {'bcc': -1.2021680359321, 'fcc': -1.225617309532, 'dc': -1.2205787817138}, 'C': {'bcc': -4.9224927347472, 'fcc': -4.7115582536571, 'dc': -9.1173050479321}, 'Ca': {'bcc': -2.0571690240181, 'fcc': -2.0588980353182, 'dc': -1.0676130509682}, 'Cd': {'bcc': -0.74628674920018, 'fcc': -0.79292950950003, 'dc': -0.48699437440018}, 'Cl': {'bcc': -1.1506533495737, 'fcc': -1.1088416983337, 'dc': -1.2086722368537}, 'Co': {'bcc': -6.9571376721606, 'fcc': -7.1130367220667, 'dc': -6.010448607808}, 'Cr': {'bcc': -9.3660120586296, 'fcc': -9.0726910324297, 'dc': -7.3017244685625}, 'Cs': {'bcc': -0.94401432143241, 'fcc': -0.94437446413303, 'dc': -0.68878351764306}, 'Cu': {'bcc': -3.7994996204056, 'fcc': -3.8342105972056, 'dc': -2.8060552767265}, 'F': {'bcc': -1.0616005597537, 'fcc': -1.0263339265138, 'dc': -1.1995972404737}, 'Fe': {'bcc': -8.1275591394133, 'fcc': -8.3172789456826, 'dc': -7.1529418077548}, 'Ga': {'bcc': -2.9227700704641, 'fcc': -2.9351881213643, 'dc': -2.7079927978143}, 'Ge': {'bcc': -4.2475203547671, 'fcc': -4.2492338555771, 'dc': -4.5243310101273}, 'H': {'bcc': -2.151679056801, 'fcc': -2.161059228847, 'dc': -2.6158870948695}, 'He': {'bcc': -0.011210137582992, 'fcc': -0.011504156580997, 'dc': -0.0067052930509988}, 'Hf': {'bcc': -7.3816484515758, 'fcc': -7.4434597893758, 'dc': -4.9561772979723}, 'Hg': {'bcc': -0.51796514649959, 'fcc': -0.80409202709961, 'dc': -0.22592448420073}, 'I': {'bcc': -1.2377007964937, 'fcc': -1.2096910310537, 'dc': -1.1972088293287}, 'In': {'bcc': -2.6050819307075, 'fcc': -2.6156617166071, 'dc': -2.3120353993638}, 'Ir': {'bcc': -8.5138738441583, 'fcc': -9.0433383851596, 'dc': -8.0366347506588}, 'K': {'bcc': -1.1003480731631, 'fcc': -1.1005245389831, 'dc': -0.81212822894315}, 'Kr': {'bcc': -0.025138964489997, 'fcc': -0.026237624099963, 'dc': -0.014134068779981}, 'La': {'bcc': -4.8213712882043, 'fcc': -4.8800239286038, 'dc': -3.8045397128192}, 'Li': {'bcc': -1.954983884503, 'fcc': -1.955776552103, 'dc': -1.434207257858}, 'Lu': {'bcc': -4.5977201115402, 'fcc': -4.6504187645405, 'dc': -2.7908280585398}, 'Mg': {'bcc': -1.5222543149, 'fcc': -1.5405219969, 'dc': -0.80645159425012}, 'Mn': {'bcc': -8.9721951754836, 'fcc': -8.9953802265836, 'dc': -7.6287727120662}, 'Mo': {'bcc': -10.964426409803, 'fcc': -10.613524599603, 'dc': -8.8145956862595}, 'N': {'bcc': -4.134306849686, 'fcc': -3.9276368005459, 'dc': -5.262667885619}, 'Na': {'bcc': -1.3551694816329, 'fcc': -1.3555319372329, 'dc': -1.0279398063331}, 'Nb': {'bcc': -9.8702100137666, 'fcc': -9.5670240447666, 'dc': -7.3929842376358}, 'Ne': {'bcc': -0.020854668219954, 'fcc': -0.021458216709902, 'dc': -0.012000084039983}, 'Ni': {'bcc': -5.5843538538984, 'fcc': -5.6644221251536, 'dc': -4.5577839366215}, 'O': {'bcc': -2.5882616221872, 'fcc': -2.4356516122072, 'dc': -3.1834101571372}, 'Os': {'bcc': -10.308221857109, 'fcc': -10.98213530611, 'dc': -9.8272692261667}, 'P': {'bcc': -4.741541932846, 'fcc': -4.583265016216, 'dc': -4.898014666756}, 'Pb': {'bcc': -3.6519609959271, 'fcc': -3.6289212536271, 'dc': -3.3494229979769}, 'Pd': {'bcc': -3.9444935723081, 'fcc': -4.0288421942082, 'dc': -2.9132809848934}, 'Po': {'bcc': -3.0927990394271, 'fcc': -2.8381674303273, 'dc': -3.056634702627}, 'Pt': {'bcc': -6.1365167703739, 'fcc': -6.2782868536738, 'dc': -5.2445074844741}, 'Rb': {'bcc': -0.99732550331316, 'fcc': -0.9977830627231, 'dc': -0.73853429411304}, 'Re': {'bcc': -11.387265186117, 'fcc': -11.613980229116, 'dc': -10.043885580204}, 'Rh': {'bcc': -6.3299335153024, 'fcc': -6.6084239294023, 'dc': -5.5047767480523}, 'Rn': {'bcc': -0.039119765199757, 'fcc': -0.034274914399703, 'dc': -0.023268726100014}, 'Ru': {'bcc': -8.5407127037438, 'fcc': -8.9585693474442, 'dc': -7.8522143613441}, 'S': {'bcc': -3.0823079626372, 'fcc': -2.9282357489772, 'dc': -3.2281222017122}, 'Sb': {'bcc': -3.9947861954359, 'fcc': -3.915301608326, 'dc': -3.9088297209109}, 'Sc': {'bcc': -4.7254798694835, 'fcc': -4.7418460199833, 'dc': -2.9104545384396}, 'Se': {'bcc': -3.004452385027, 'fcc': -2.8797729553271, 'dc': -3.0923564462769}, 'Si': {'bcc': -4.9611139873372, 'fcc': -4.9424758223572, 'dc': -5.4266926628172}, 'Sn': {'bcc': -3.8385588402271, 'fcc': -3.8435548502275, 'dc': -3.8496586356778}, 'Sr': {'bcc': -1.77405090605, 'fcc': -1.77722729084, 'dc': -0.86317195430001}, 'Ta': {'bcc': -9.9287972108214, 'fcc': -9.6896374501212, 'dc': -7.1109652557225}, 'Tc': {'bcc': -10.238231049536, 'fcc': -10.390197646336, 'dc': -9.0075542594068}, 'Te': {'bcc': -3.0710565998274, 'fcc': -2.9954324916271, 'dc': -3.0056148552771}, 'Ti': {'bcc': -6.9007627606475, 'fcc': -6.8961179135474, 'dc': -4.7552573544474}, 'Tl': {'bcc': -2.2891364078639, 'fcc': -2.2828021420637, 'dc': -1.9577876093638}, 'V': {'bcc': -8.5701819516664, 'fcc': -8.3472852103664, 'dc': -6.2842300919483}, 'W': {'bcc': -11.53276948725, 'fcc': -11.12731551925, 'dc': -8.9775991517508}, 'Xe': {'bcc': -0.028135481999925, 'fcc': -0.029565304199878, 'dc': -0.01576096935014}, 'Y': {'bcc': -4.7165501819336, 'fcc': -4.7552449053337, 'dc': -2.8782095933198}, 'Zn': {'bcc': -1.0712909416002, 'fcc': -1.1353424565, 'dc': -0.69860907199973}, 'Zr': {'bcc': -7.4388863720442, 'fcc': -7.4428540639437, 'dc': -5.1733974047302}, 'At': {'bcc': -1.3195388967652, 'fcc': -1.294779666765, 'dc': -1.2599062382651}, 'Ce': {'bcc': -5.625766722238, 'fcc': -5.7250266380379, 'dc': -5.0045847168622}, 'Dy': {'bcc': -4.6556320578375, 'fcc': -4.7139295896377, 'dc': -3.0831753256025}, 'Er': {'bcc': -4.5941389571381, 'fcc': -4.627036839438, 'dc': -2.6046080445376}, 'Eu': {'bcc': -5.1893298738014, 'fcc': -5.1770553630013, 'dc': -4.5032373577251}, 'Gd': {'bcc': -5.0398528464702, 'fcc': -5.028869651871, 'dc': -4.0824485517514}, 'Ho': {'bcc': -4.6284525117062, 'fcc': -4.6745422006061, 'dc': -2.536005629685}, 'Nd': {'bcc': -5.5754804937624, 'fcc': -5.7708223079626, 'dc': -5.4674318453917}, 'Pm': {'bcc': -5.3472856960834, 'fcc': -5.5623432460834, 'dc': -5.2805652885154}, 'Pr': {'bcc': -5.7172961561619, 'fcc': -5.8730285362617, 'dc': -5.3920709394615}, 'Sm': {'bcc': -5.1758622799025, 'fcc': -5.3290693076033, 'dc': -4.9867137085566}, 'Tb': {'bcc': -4.8077289971661, 'fcc': -4.8069823167662, 'dc': -3.5853146035661}, 'Tm': {'bcc': -4.5615888362681, 'fcc': -4.5851533501682, 'dc': -2.5600934864688}, 'Fr': {'bcc': -0.85792634823338, 'fcc': -0.85924718923343, 'dc': -0.64204762673398}, 'Ra': {'bcc': -1.4665561505699, 'fcc': -1.4758229865693, 'dc': -0.66843722606973}, 'Yb': {'bcc': -4.5361242876297, 'fcc': -4.5457949412285, 'dc': -2.5336876960282}, 'Am': {'bcc': -6.8068134186888, 'fcc': -6.6001369746882, 'dc': -7.3126409272882}, 'Cm': {'bcc': -5.9166740982382, 'fcc': -5.7998903232383, 'dc': -6.311278478739}, 'Np': {'bcc': -8.5804949299454, 'fcc': -8.3801572419452, 'dc': -8.5318409763017}, 'Pa': {'bcc': -8.5472367689053, 'fcc': -8.6400320759058, 'dc': -7.0933707150732}, 'Pu': {'bcc': -7.7049371017547, 'fcc': -7.4533530317549, 'dc': -8.1517556376511}, 'Th': {'bcc': -7.1463396461386, 'fcc': -7.2448100231377, 'dc': -5.3619267130198}, 'U': {'bcc': -8.8626964319301, 'fcc': -8.8141207119297, 'dc': -8.0889150292578}, 'Ac': {'dc': -2.6800190194876}}

data = dict(sorted(data.items()))

# For write to json
ele_conf_mapping = {}

# Prepare data for plotting
elements = list(data.keys())
fcc_values = [np.round(data[e].get('fcc', np.nan), 4) for e in elements]
bcc_values = [np.round(data[e].get('bcc', np.nan), 4) for e in elements]
dc_values = [np.round(data[e].get('dc', np.nan), 4) for e in elements]

# Determine which structure has the minimum value for each element
min_labels = []
formatted_values = []

for i, element in enumerate(elements):
    min_value = min([v for v in [fcc_values[i], bcc_values[i], dc_values[i]] if not np.isnan(v)])
    
    # Determine which structure has the minimum value
    if min_value == fcc_values[i]:
        min_label = 'FCC'
    elif min_value == bcc_values[i]:
        min_label = 'BCC'
    else:
        min_label = 'DC'

    ele_conf_mapping[element] = min_label
    
    min_labels.append(min_label)
    # Format the values, appending the difference if not the minimum
    formatted_row = []
    for value in [fcc_values[i], bcc_values[i], dc_values[i]]:
        if value == min_value:
            formatted_row.append(f"{value:.4f}")
        elif np.isnan(value):
            formatted_row.append(f"{value:.4f}")
        else:
            difference = value - min_value
            formatted_row.append(f"{min_label} + ({difference:.4f})")
    
    formatted_values.append(formatted_row)

# Prepare table data with the formatted values and min labels
table_data = np.array([formatted_values[i] + [min_labels[i]] for i in range(len(elements))])
#table_data = np.array([formatted_values[i] for i in range(len(elements))])

column_labels = ['FCC (eV/atom)', 'BCC (eV/atom)', 'DC (eV/atom)', 'Min']
row_labels = elements

# Create the figure and axis
fig, ax = plt.subplots(figsize=(12, len(elements) * 0.25))  # Adjust size as needed
ax.axis('off')

# Create table
table = ax.table(cellText=table_data,
                 rowLabels=row_labels,
                 colLabels=column_labels,
                 cellLoc='center',
                 loc='center')

# export json mapping
with open('conf_mapping.json', 'w') as fh:
    json.dump(ele_conf_mapping, fh, indent=4)

# Save the plot to a PNG file
plt.savefig('pp.png', bbox_inches='tight', pad_inches=0.1)

# Optional: Close the plot to free up resources
plt.close()

